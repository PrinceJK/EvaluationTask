@using EvaluationTask.Web.Models.Enums
@using EvaluationTask.Web.Extensions
@model EvaluationTask.Web.Models.Dtos.CancelationRequestDto

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>CancellationRequest</h4>
<hr />
<div class="row justify-content-center">
    <div class="col-md-4">
        <form asp-action="Create" onsubmit="return validateForm()" id="createForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="RequestorName" class="control-label"></label>
                <input asp-for="RequestorName" class="form-control" id="requestNameInput" required />
                <div asp-validation-for="RequestorName" class="text-danger" id="requestNameValidation"></div>
            </div>
            <div class="form-group">
                <label asp-for="RequestDate" class="control-label"></label>
                <input asp-for="RequestDate" class="form-control" required />
                <span asp-validation-for="RequestDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                @foreach (Status status in Enum.GetValues(typeof(Status)))
                {
                    <div class="form-check" style="display: flex; align-items: center;">
                        <input asp-for="Status" class="form-check-input" type="radio" value="@status" id="@status" onchange="toggleFeeInput(this)" required />
                        <label class="form-check-label" for="@status" style="margin-right: 10px;">@status.GetDisplayName()</label>

                        @if (status == Status.ApprovedWithFee)
                        {
                            <input asp-for="FeeAmount" type="number" step="0.01" class="form-control" id="feeAmountInput" style="display: none; width: 100px; margin-left: 10px;" value="0.00" />
                            <span asp-validation-for="FeeAmount" class="text-danger" id="feeAmountValidation"></span>
                        }
                    </div>
                }
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Message" class="control-label"></label>
                <input asp-for="Message" class="form-control" />
                <span asp-validation-for="Message" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary save-button" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<!-- Success Modal -->
<div class="modal fade" id="successModal" tabindex="-1" role="dialog" aria-labelledby="successModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="successModalLabel">Success</h5>
            </div>
            <div class="modal-body">
                Cancellation request created successfully!
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="redirectToIndex()">Ok</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function toggleFeeInput(radio) {
            var feeAmountInput = document.getElementById('feeAmountInput');
            if (radio.value === '@Status.ApprovedWithFee') {
                feeAmountInput.style.display = 'inline-block';
                feeAmountInput.value = ''; // Clear previous value
                feeAmountInput.required = true;
            } else {
                feeAmountInput.style.display = 'none';
                feeAmountInput.value = '0.00'; // Set default value when hidden
                feeAmountInput.required = false;
            }
        }

        // Initialize the FeeAmount visibility based on the initial selection
        document.addEventListener('DOMContentLoaded', function () {
            var selectedRadio = document.querySelector('input[name="Status"]:checked');
            if (selectedRadio) {
                toggleFeeInput(selectedRadio);
            }
        });

        function validateForm() {
            const form = document.querySelector('form');
            let isValid = true;

            // Check Requestor Name
            const requestorName = document.getElementById('requestNameInput');
            const requestorNamePattern = /^[a-zA-Z]+(\s[a-zA-Z]+)*$/;
            if (!requestorNamePattern.test(requestorName.value)) {
                document.getElementById('requestNameValidation').textContent = 'Invalid name format';
                isValid = false;
            } else {
                document.getElementById('requestNameValidation').textContent = '';
            }

            // Check Fee Amount if visible
            const feeAmountInput = document.getElementById('feeAmountInput');
            if (feeAmountInput && feeAmountInput.style.display !== 'none') {
                var feeValue = parseFloat(feeAmountInput.value);
                if (isNaN(feeValue) || feeValue < 0) {
                    document.getElementById('feeAmountValidation').textContent = 'Fee Amount must be a valid non-negative decimal number.';
                    isValid = false;
                } else {
                    document.getElementById('feeAmountValidation').textContent = '';
                }
            }

            // Generic alert if form is not valid
            if (!isValid) {
                alert('Oops, you missed some validations. Try again.');
            }

            return isValid;
        }

        // Ensure that the modal shows after the form is successfully submitted
        $('#createForm').on('submit', function (event) {
            event.preventDefault(); // Prevent default form submission

            if (validateForm()) {
                // Submit the form via AJAX if all validations pass
                $.ajax({
                    type: 'POST',
                    url: $(this).attr('action'),
                    data: $(this).serialize(),
                    success: function () {
                        // Show the success modal
                        $('#successModal').modal('show');
                        // Optionally, reset the form
                        $('#createForm')[0].reset();
                    },
                    error: function () {
                        alert('An error occurred while processing the request.');
                    }
                });
            }
        });

        // Redirect after closing the modal
        function redirectToIndex() {
            window.location.href = '@Url.Action("Index", "CancellationRequests")';
        }
    </script>
}
